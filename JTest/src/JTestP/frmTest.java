/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JTestP;

import java.io.*;
import java.util.*;
public class frmTest extends javax.swing.JFrame {

    //Bandera de inicio
    boolean start=false;
    public static boolean end=false;
    
    //Arreglo con las 10 preguntas del cuestionario
    Pregunta[] cuestionario = new Pregunta[10];
    
    //Contadores de preguntas
    public static int contP;
    
    //Arreglo de progreso
    String[] estado;
    String[] respuesta;
    Progreso progreso;
    ArrayList<Progreso> saved; 
    public static String result;
    
    //Archivos
        FileInputStream in;
	FileOutputStream out;
	ObjectInputStream fin;
	ObjectOutputStream fout;
        
    //Usuario
     public String user;
    
    public frmTest(String user) {
        initComponents();
        setLocationRelativeTo(null);
        this.user=user;
        
        progreso = new Progreso(user);
        estado = new String[10];
        respuesta = new String[10];
        saved = new ArrayList<Progreso>();
        
        Cuestionario.abrirArch("Cuestionario");
        
        Cuestionario.listarRandom(Cuestionario.preguntas);
        
        for(int i =0; i<Cuestionario.preguntas10.size();i++){
            cuestionario[i]=Cuestionario.preguntas10.get(i);
            
        }
        
        bienvenido.setText("Bienvendio "+user);
        
        r1.setText("a) ");
        r2.setText("b) ");
        r3.setText("c) ");
        r4.setText("d) ");
        
        areaPreguntas.setVisible(true);
       areaEstado.setVisible(false);
       areaHistorial.setVisible(false);
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        respuestasGroup = new javax.swing.ButtonGroup();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        iniciar = new javax.swing.JButton();
        restart = new javax.swing.JButton();
        guardar = new javax.swing.JButton();
        bienvenido = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        preguntasB = new javax.swing.JButton();
        estadoB = new javax.swing.JButton();
        historialB = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        areaPreguntas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textPregunta = new javax.swing.JTextArea();
        r1 = new javax.swing.JRadioButton();
        r2 = new javax.swing.JRadioButton();
        r3 = new javax.swing.JRadioButton();
        r4 = new javax.swing.JRadioButton();
        anterior = new javax.swing.JButton();
        siguiente = new javax.swing.JButton();
        finalizar = new javax.swing.JButton();
        numPregunta = new javax.swing.JLabel();
        areaEstado = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        areaHistorial = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jPanel6.setBackground(new java.awt.Color(41, 102, 224));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cuestionario");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        iniciar.setText("Iniciar");
        iniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarActionPerformed(evt);
            }
        });

        restart.setText("Reiniciar");
        restart.setEnabled(false);
        restart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restartActionPerformed(evt);
            }
        });

        guardar.setText("Guardar");
        guardar.setEnabled(false);
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        bienvenido.setText("Bienvenido ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(iniciar)
                .addGap(55, 55, 55)
                .addComponent(bienvenido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(guardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(restart)
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(iniciar)
                .addComponent(bienvenido))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(restart)
                    .addComponent(guardar)))
        );

        preguntasB.setText("Preguntas");
        preguntasB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preguntasBActionPerformed(evt);
            }
        });

        estadoB.setText("Estado");
        estadoB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadoBActionPerformed(evt);
            }
        });

        historialB.setText("Historial");
        historialB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historialBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(preguntasB))
                    .addComponent(estadoB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(historialB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(preguntasB)
                .addGap(18, 18, 18)
                .addComponent(estadoB)
                .addGap(18, 18, 18)
                .addComponent(historialB)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        areaPreguntas.setBackground(new java.awt.Color(255, 255, 255));

        textPregunta.setEditable(false);
        textPregunta.setColumns(20);
        textPregunta.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        textPregunta.setRows(5);
        jScrollPane1.setViewportView(textPregunta);

        respuestasGroup.add(r1);
        r1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1ActionPerformed(evt);
            }
        });

        respuestasGroup.add(r2);
        r2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r2ActionPerformed(evt);
            }
        });

        respuestasGroup.add(r3);
        r3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r3ActionPerformed(evt);
            }
        });

        respuestasGroup.add(r4);
        r4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r4ActionPerformed(evt);
            }
        });

        anterior.setText("Anterior");
        anterior.setEnabled(false);
        anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteriorActionPerformed(evt);
            }
        });

        siguiente.setText("Siguiente");
        siguiente.setEnabled(false);
        siguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguienteActionPerformed(evt);
            }
        });

        finalizar.setText("Finalizar");
        finalizar.setEnabled(false);
        finalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizarActionPerformed(evt);
            }
        });

        numPregunta.setText("Pregunta ");

        javax.swing.GroupLayout areaPreguntasLayout = new javax.swing.GroupLayout(areaPreguntas);
        areaPreguntas.setLayout(areaPreguntasLayout);
        areaPreguntasLayout.setHorizontalGroup(
            areaPreguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(areaPreguntasLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(areaPreguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(areaPreguntasLayout.createSequentialGroup()
                        .addComponent(numPregunta, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(areaPreguntasLayout.createSequentialGroup()
                        .addGroup(areaPreguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, areaPreguntasLayout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(anterior)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(siguiente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 368, Short.MAX_VALUE)
                                .addComponent(finalizar)
                                .addGap(106, 106, 106))
                            .addComponent(jScrollPane1)
                            .addGroup(areaPreguntasLayout.createSequentialGroup()
                                .addGroup(areaPreguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(r2)
                                    .addComponent(r1)
                                    .addComponent(r3)
                                    .addComponent(r4))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(14, 14, 14))))
        );
        areaPreguntasLayout.setVerticalGroup(
            areaPreguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(areaPreguntasLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(numPregunta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(r2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(r3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(r4)
                .addGap(18, 18, 18)
                .addGroup(areaPreguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(anterior)
                    .addComponent(siguiente)
                    .addComponent(finalizar))
                .addContainerGap(387, Short.MAX_VALUE))
        );

        areaEstado.setBackground(new java.awt.Color(255, 255, 255));

        tabla.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Pregunta", "Estado", "Respuesta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setResizable(false);
            tabla.getColumnModel().getColumn(1).setResizable(false);
            tabla.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout areaEstadoLayout = new javax.swing.GroupLayout(areaEstado);
        areaEstado.setLayout(areaEstadoLayout);
        areaEstadoLayout.setHorizontalGroup(
            areaEstadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(areaEstadoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE)
                .addContainerGap())
        );
        areaEstadoLayout.setVerticalGroup(
            areaEstadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(areaEstadoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 693, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        tabla2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        tabla2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Estatus", "Calificacion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tabla2);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout areaHistorialLayout = new javax.swing.GroupLayout(areaHistorial);
        areaHistorial.setLayout(areaHistorialLayout);
        areaHistorialLayout.setHorizontalGroup(
            areaHistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        areaHistorialLayout.setVerticalGroup(
            areaHistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(areaHistorialLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(areaPreguntas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(areaEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(areaHistorial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(areaPreguntas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(areaEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(areaHistorial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void preguntasBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preguntasBActionPerformed
       areaPreguntas.setVisible(true);
       areaEstado.setVisible(false);
       areaHistorial.setVisible(false);
    }//GEN-LAST:event_preguntasBActionPerformed

    private void restartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restartActionPerformed
        contP=0;
        start = false;
        
        respuestasGroup.clearSelection();
        textPregunta.setText("");
        r1.setText("a) ");
        r2.setText("b) ");
        r3.setText("c) ");
        r4.setText("d) ");
        iniciar.setEnabled(!start);
        restart.setEnabled(start);
        guardar.setEnabled(start);
        siguiente.setEnabled(start);
        anterior.setEnabled(start);
        finalizar.setEnabled(start);
        
        Cuestionario.preguntas10.clear();
        Cuestionario.listarRandom(Cuestionario.preguntas);
        
        for(int i =0; i<Cuestionario.preguntas10.size();i++){
            cuestionario[i]=Cuestionario.preguntas10.get(i);
            
        }
        progreso = new Progreso(user);
        
        
        
    }//GEN-LAST:event_restartActionPerformed

    private void iniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarActionPerformed
        contP=0;
        start = true;
        
       areaPreguntas.setVisible(true);
       areaEstado.setVisible(false);
       areaHistorial.setVisible(false);
        numPregunta.setText("Pregunta "+contP);
        respuestasGroup.clearSelection();
        textPregunta.setText("");
        r1.setText("a) ");
        r2.setText("b) ");
        r3.setText("c) ");
        r4.setText("d) ");
        iniciar.setEnabled(!start);
        restart.setEnabled(start);
        guardar.setEnabled(start);
        
        
        
        
        imprimirPregunta();
        siguiente.setEnabled(start);
        anterior.setEnabled(start);
        
        
    }//GEN-LAST:event_iniciarActionPerformed

    private void anteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteriorActionPerformed
        if(!(siguiente.isEnabled())){
            siguiente.setEnabled(true);
            contP--;
        }
        
        if(contP<=0){
            anterior.setEnabled(false);
            //contP=0;
        }
        
        contP--;
        imprimirPregunta();
    }//GEN-LAST:event_anteriorActionPerformed

    private void siguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siguienteActionPerformed
        if(!(anterior.isEnabled())){
            anterior.setEnabled(true);
            contP++;
        }
        
        if(contP>=9){
            siguiente.setEnabled(false);
        }
        
        contP++;
        imprimirPregunta();
    }//GEN-LAST:event_siguienteActionPerformed

    private void estadoBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estadoBActionPerformed
       areaPreguntas.setVisible(false);
       areaEstado.setVisible(true);
       areaHistorial.setVisible(false);
       
       String[][] matriz = new String[cuestionario.length][3]; 

            

            for(int i = 0; i < cuestionario.length;i++){
                matriz[i][0] = String.valueOf(i+1);
                matriz[i][1] = estado[i];
                matriz[i][2] = respuesta[i];
            }
            tabla.setModel(new javax.swing.table.DefaultTableModel( matriz, new String [] {"Pregunta", "Estado", "Respuesta" }));
    }//GEN-LAST:event_estadoBActionPerformed

    private void historialBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historialBActionPerformed
       areaPreguntas.setVisible(false);
       areaEstado.setVisible(false);
       areaHistorial.setVisible(true);
       
       String name= "Save";
    	try{
    	File f = new File("src/Files/"+name+".dat");
    	if(f.exists())
    	{
            System.out.println("Archivo existe");
                saved.clear();
    		in=new FileInputStream(name);
    		fin=new ObjectInputStream(in);
    		try{
    			do{
                            saved.add((Progreso)fin.readObject());
    			}while(true);
    		}catch(EOFException e){
    			;
    		}catch(ClassNotFoundException e){;}
                fin.close();
                
                
    	}
    	else{
    	
                System.out.println("Crando archivo");    
                f.createNewFile();
                out=new FileOutputStream(name);
                fout=new ObjectOutputStream(out);
                fout.close();
            }       
        }catch(Exception e){;}
        System.out.println(progreso+" Guardado");
       
       String[][] matriz = new String[saved.size()][3]; 

            
            int j=0;
            for(int i = 0; i < saved.size();i++){
                if(saved.get(i).getNombre().equals(user)){
                    matriz[j][0] = user;
                    matriz[j][1] = saved.get(i).getAprovacion();
                    matriz[j][2] = String.valueOf(saved.get(i).getCal());
                    j++;
                }
            }
            tabla2.setModel(new javax.swing.table.DefaultTableModel( matriz, new String [] {"Nombre","Estado", "Calificacion" }));
    }//GEN-LAST:event_historialBActionPerformed

    private void r1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1ActionPerformed
        
        estado = progreso.getEstado(); 
        if(!(estado[contP].equals("Contestado")))
            progreso.setCont(progreso.getCont()+1);
        estado[contP]="Contestado";
        progreso.setEstado(estado);
        
        respuesta = progreso.getRespuesta();      
        respuesta[contP]= "a)";
        if(0== cuestionario[contP].correct)
            progreso.setCal(progreso.getCal()+1);
        progreso.setRespuesta(respuesta);
        
        finalizar.setEnabled(start);
        
    }//GEN-LAST:event_r1ActionPerformed

    private void r2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r2ActionPerformed
         estado = progreso.getEstado();  
         if(!(estado[contP].equals("Contestado")))
            progreso.setCont(progreso.getCont()+1);
        estado[contP]="Contestado";
        progreso.setEstado(estado);
        
        respuesta = progreso.getRespuesta();      
        respuesta[contP]= "b)";
        if(1== cuestionario[contP].correct)
            progreso.setCal(progreso.getCal()+1);
        progreso.setRespuesta(respuesta);
        
        finalizar.setEnabled(start);
    }//GEN-LAST:event_r2ActionPerformed

    private void r3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r3ActionPerformed
         estado = progreso.getEstado();    
         if(!(estado[contP].equals("Contestado")))
            progreso.setCont(progreso.getCont()+1);
        estado[contP]="Contestado";
        progreso.setEstado(estado);
        
        respuesta = progreso.getRespuesta();      
        respuesta[contP]= "c)";
        if(2== cuestionario[contP].correct)
            progreso.setCal(progreso.getCal()+1);
        progreso.setRespuesta(respuesta);
        
        finalizar.setEnabled(start);
    }//GEN-LAST:event_r3ActionPerformed

    private void r4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r4ActionPerformed
         estado = progreso.getEstado(); 
         if(!(estado[contP].equals("Contestado")))
            progreso.setCont(progreso.getCont()+1);
        estado[contP]="Contestado";
        progreso.setEstado(estado);
        
        respuesta = progreso.getRespuesta();      
        respuesta[contP]= "d)";
        if(3== cuestionario[contP].correct)
            progreso.setCal(progreso.getCal()+1);
        progreso.setRespuesta(respuesta);
        
        finalizar.setEnabled(start);
    }//GEN-LAST:event_r4ActionPerformed

    private void finalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizarActionPerformed
        /*
            popFinalizar fin = new popFinalizar();
            fin.setLocationRelativeTo(this);
            fin.setVisible(true);
          */  
        if(progreso.getCal()>6)
            progreso.setAprovacion("Aprobado");
        else
            progreso.setAprovacion("Reprobado");
        
        //if(end){
            guardar();
        
        result= ("Nombre: "+ progreso.getNombre()+ "\n Calificación: "+ progreso.getCal() +"\n Estado: "+ progreso.getAprovacion());
        
            popRes res = new popRes();
            res.setLocationRelativeTo(this);
            res.setVisible(true);
        
        start = false;
        
        respuestasGroup.clearSelection();
        textPregunta.setText("");
        r1.setText("a) ");
        r2.setText("b) ");
        r3.setText("c) ");
        r4.setText("d) ");
        iniciar.setEnabled(!start);
        restart.setEnabled(start);
        guardar.setEnabled(start);
        siguiente.setEnabled(start);
        anterior.setEnabled(start);
        finalizar.setEnabled(start);
        
        
        Cuestionario.preguntas10.clear();
        Cuestionario.listarRandom(Cuestionario.preguntas);
        
        for(int i =0; i<Cuestionario.preguntas10.size();i++){
            cuestionario[i]=Cuestionario.preguntas10.get(i);
            
        }
        progreso = new Progreso(user);
        //}
        
        
        
    }//GEN-LAST:event_finalizarActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
       guardar();
                
    }//GEN-LAST:event_guardarActionPerformed

    private void guardar(){
        String name= "Save";
    	try{
    	File f = new File("src/Files/"+name+".dat");
    	if(f.exists())
    	{
                saved.clear();
    		in=new FileInputStream(name);
    		fin=new ObjectInputStream(in);
    		try{
    			do{
    				saved.add((Progreso)fin.readObject());
    			}while(true);
    		}catch(EOFException e){
    			;
    		}catch(ClassNotFoundException e){;}
                fin.close();
                if(saved.contains(progreso)){
                    saved.set(saved.indexOf(progreso),progreso);
                }
                else{
                    saved.add(progreso);
                }
                
                out=new FileOutputStream(name);
                fout=new ObjectOutputStream(out);
                for(int i=0;i<saved.size();i++){
                    fout.writeObject(saved.get(i));
                }
                fout.close();
                
    	}
    	else{
    	
                saved.add(progreso);
                f.createNewFile();
                out=new FileOutputStream(name);
                fout=new ObjectOutputStream(out);
                for(int i=0;i<saved.size();i++){
                    fout.writeObject(saved.get(i));
                }
                fout.close();
            }       
        }catch(Exception e){;}
        System.out.println(progreso+" Guardado");
    }
    
    
    private void imprimirPregunta(){
        numPregunta.setText("Pregunta "+(contP+1));
        respuestasGroup.clearSelection();
        textPregunta.setText(cuestionario[contP].question);
        r1.setText("a) "+cuestionario[contP].answer[0]);
        r2.setText("b) "+cuestionario[contP].answer[1]);
        r3.setText("c) "+cuestionario[contP].answer[2]);
        r4.setText("d) "+cuestionario[contP].answer[3]);
    }
    
    public void setUser(String user){
        this.user=user;
    }
    public String getUser(){
        return user;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmTest("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton anterior;
    private javax.swing.JPanel areaEstado;
    private javax.swing.JPanel areaHistorial;
    private javax.swing.JPanel areaPreguntas;
    private javax.swing.JLabel bienvenido;
    private javax.swing.JButton estadoB;
    private javax.swing.JButton finalizar;
    private javax.swing.JButton guardar;
    private javax.swing.JButton historialB;
    private javax.swing.JButton iniciar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel numPregunta;
    private javax.swing.JButton preguntasB;
    private javax.swing.JRadioButton r1;
    private javax.swing.JRadioButton r2;
    private javax.swing.JRadioButton r3;
    private javax.swing.JRadioButton r4;
    private javax.swing.ButtonGroup respuestasGroup;
    private javax.swing.JButton restart;
    private javax.swing.JButton siguiente;
    private javax.swing.JTable tabla;
    private javax.swing.JTable tabla2;
    private javax.swing.JTextArea textPregunta;
    // End of variables declaration//GEN-END:variables
}
